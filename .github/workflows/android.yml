# name: Dart

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v4

#       # Note: This workflow uses the latest stable version of the Dart SDK.
#       # You can specify other versions if desired, see documentation here:
#       # https://github.com/dart-lang/setup-dart/blob/main/README.md
#       # - uses: dart-lang/setup-dart@v1
#       - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

#       - name: Install dependencies
#         run: dart pub get

#       # Uncomment this step to verify the use of 'dart format' on each commit.
#       # - name: Verify formatting
#       #   run: dart format --output=none --set-exit-if-changed .

#       # Consider passing '--fatal-infos' for slightly stricter analysis.
#       - name: Analyze project source
#         run: dart analyze

#       # Your project will need to have tests in test/ and a dependency on
#       # package:test for this step to succeed. Note that Flutter projects will
#       # want to change this to 'flutter test'.
#       - name: Run tests
#         run: dart test


name: Flutter CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 3.24.3
    - run: flutter --version | flutter devices

    - name: Install dependencies
      run: flutter pub get

    - name: Run unit tests
      run: flutter test --tags unit
    
    
    
    
    
    
    # - name: Set up JDK 11
    #   uses: actions/setup-java@v2
    #   with:
    #     distribution: 'zulu'
    #     java-version: '11'

    # - name: Install Android SDK
    #   uses: android-actions/setup-android@v2
    #   with:
    #     api-level: 33
    #     build-tools: 33.0.2

    # - name: Create AVD
    #   run: sdkmanager --install "system-images;android-33;google_apis;x86_64" && yes
    # - name: list emulators
    #   run: avdmanager list device
    # - name: Set up environment variables
    #   run: echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV

    # - name: Start AVD
    #   run: |
    #     export PATH=$ANDROID_SDK_ROOT/emulator:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/tools/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH
    #     nohup emulator -avd test -no-window -no-audio -no-boot-anim -gpu swiftshader_indirect &
    #     adb wait-for-device
    #     adb shell input keyevent 82


    




    - name: Run widget tests
      run: flutter test --tags widget

    - name: Build APK
      run: flutter build apk --release

    - name: Upload to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{ secrets.FIREBASE_APP_ID }}
        token: ${{ secrets.FIREBASE_TOKEN }}
        groups: testers
        file: build/app/outputs/flutter-apk/app-release.apk




    - name: Run golden tests
      run: flutter test --tags=golden
    - name: Upload test failures
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-failures
        path: /home/runner/work/mobiletesting/mobiletesting/test/ui_test/failures
